import { MongoDatabase } from "../../database/mongodb";
import { AmazonSDK } from "../../utils/amazon-sdk";
export declare class HotelRepo {
    private readonly mongodb;
    amazon: AmazonSDK;
    config: {
        get: (arg0: string) => any;
    };
    constructor(mongodb: MongoDatabase);
    timeAgo(input: any): Promise<number>;
    fillDatesTandC(HotelRateByDate: any): Promise<unknown>;
    emailBookingSend(template: any, to: any, subject: any, BookingConfirmation: any, CreateDate: any, HotelPropertyName: any, CheckInDate: any, CheckOutDate: any, Bookinglink: any): Promise<unknown>;
    captionImageMatchingRawData(requestResults_images_Json: any, requestResults_hotel_Json: any): Promise<unknown>;
    isEven(number: any): boolean;
    isOdd(number: any): boolean;
    RequestExtarFlow(PlusRequest: any): any;
    DivionsAdults(data: any): Promise<any>;
    ParticipationLevel(ParticipationLevel: any): Promise<boolean>;
    minRequestforHotelDetailsUpdate(json_data: any, ParticipationLevel: any): Promise<unknown>;
    minRequestforHotelDetails(json_data: any, ParticipationLevel: any): Promise<unknown>;
    filterImage(size: any, data: any): Promise<any>;
    http_currenciesBySymbols(base: any): Promise<unknown>;
    convertPriceToBase(base: any, Price: any): Promise<unknown>;
    http_HotelDetailsAvailability(data: any): Promise<any>;
    multiSelectHotelDetails(data: any, requestFrom: any): Promise<any>;
    hotelDetails(data: any, modifyData: any): Promise<any>;
    http_moreHotelSearchingAvailability(data: any, modifyData: any): Promise<any>;
    http_HotelSearchingAvailability(data: any, modifyData: any): Promise<any>;
    moreHotelServiceAvailabilityRequest(data: any, modifyData: any): Promise<any>;
    hotelServiceAvailabilityRequest(data: any, modifyData: any): Promise<any>;
    http_GetMediaLinks(data: any): Promise<any>;
    hotelMediaLinks(data: any, modifyData: any): Promise<unknown>;
    http_HotelTermsAndCondition(data: any): Promise<unknown>;
    getMultiTermsAndCondition(data: any): Promise<unknown>;
    hotelTermsAndCondition(data: any, modifyData: any): Promise<unknown>;
    adultsAndRooms(body: any): Promise<unknown>;
    testing(body: any): Promise<unknown>;
    cityAutoComplete(data: any): Promise<unknown>;
    HotelRateDetailForFilters(hotelRateDetail: any): Promise<void>;
    hotelFilters(filterbody: any): Promise<unknown>;
    popularDestinations(body: any, ip: any): Promise<unknown>;
    destinationsDeals(body: any, ip: any): Promise<unknown>;
    blogs(body: any): Promise<unknown>;
    http_GetMultiMediaLinks(body: any): Promise<unknown>;
    userCurrentLocation(bady: any, ip: any): Promise<unknown>;
    http_Booking(body: any): Promise<unknown>;
    userBooking(body: any): Promise<unknown>;
    userReviews(body: any): Promise<unknown>;
    SearchByIataCode(body: any): Promise<unknown>;
    http_Bookingcancel(body: any): Promise<unknown>;
    bookingCancel(body: any): Promise<unknown>;
    userBookingDetails(body: any): Promise<unknown>;
    FilterBylistCities(client: any, data: any): Promise<any>;
    SearchByfilters(data: any): Promise<unknown>;
    Syncfilterdata(body: any): Promise<unknown>;
}
